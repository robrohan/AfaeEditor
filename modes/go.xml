<?xml version="1.0"?>
<!DOCTYPE MODE SYSTEM "xmode.dtd">
<MODE>
	<PROPS>
		<PROPERTY NAME="indentOpenBrackets" VALUE="{" />
		<PROPERTY NAME="indentCloseBrackets" VALUE="}" />
		<PROPERTY NAME="indentPrevLine"
			VALUE="\s*(((if|while)\s*\(|else\s*(\{|$)|else\s+if\s*\(|case\s+.+:|default:)[^;]*|for\s*\(.*)" />
		<!-- set this to 'true' if you want to use GNU coding style -->
		<PROPERTY NAME="doubleBracketIndent" VALUE="false" />
		<PROPERTY NAME="commentStart" VALUE="/*" />
		<PROPERTY NAME="commentEnd" VALUE="*/" />
		<PROPERTY NAME="lineComment" VALUE="//" />
		<PROPERTY NAME="wordBreakChars" VALUE=",+-=&lt;&gt;/?^&amp;*" />
	</PROPS>
	
	<RULES ESCAPE="\" IGNORE_CASE="FALSE" HIGHLIGHT_DIGITS="TRUE">
		<!-- whitespace: (space and tab) -->
		<!-- <WHITESPACE> </WHITESPACE>
		<WHITESPACE>	</WHITESPACE> -->

		<!-- C style comment -->
		<SPAN TYPE="COMMENT1">
			<BEGIN>/*</BEGIN>
			<END>*/</END>
		</SPAN>

		<SPAN TYPE="LITERAL1" NO_LINE_BREAK="TRUE">
			<BEGIN>"</BEGIN>
			<END>"</END>
		</SPAN>
		<SPAN TYPE="LITERAL1" NO_LINE_BREAK="TRUE">
			<BEGIN>'</BEGIN>
			<END>'</END>
		</SPAN>

		<!-- preprocessor statements -->
		<EOL_SPAN TYPE="KEYWORD2">#</EOL_SPAN>
		<!-- <MARK_FOLLOWING TYPE="KEYWORD2" EXCLUDE_MATCH="FALSE" AT_LINE_START="TRUE">#</MARK_FOLLOWING> -->
		
		<!-- <SPAN TYPE="LABEL">
			<BEGIN>&lt;</BEGIN>
			<END>&gt;</END>
		</SPAN> -->
		
		<EOL_SPAN TYPE="COMMENT1">//</EOL_SPAN>
		<SEQ TYPE="NULL">)</SEQ>

		<SEQ TYPE="OPERATOR">+</SEQ>
		<SEQ TYPE="OPERATOR">&amp;</SEQ>
		<SEQ TYPE="OPERATOR">+=</SEQ>
		<SEQ TYPE="OPERATOR">&amp;=</SEQ>
		<SEQ TYPE="OPERATOR">&amp;&amp;</SEQ>
		<SEQ TYPE="OPERATOR">==</SEQ>
		<SEQ TYPE="OPERATOR">!=</SEQ>
		<SEQ TYPE="OPERATOR">-</SEQ>
		<SEQ TYPE="OPERATOR">|</SEQ>
		<SEQ TYPE="OPERATOR">-=</SEQ>
		<SEQ TYPE="OPERATOR">|=</SEQ>
		<SEQ TYPE="OPERATOR">||</SEQ>
		<SEQ TYPE="OPERATOR">&lt;</SEQ>
		<SEQ TYPE="OPERATOR">&lt;=</SEQ>
		<SEQ TYPE="NULL">]</SEQ>
		<SEQ TYPE="NULL">[</SEQ>
		<SEQ TYPE="OPERATOR">*</SEQ>
		<SEQ TYPE="OPERATOR">^</SEQ>
		<SEQ TYPE="OPERATOR">*=</SEQ>
		<SEQ TYPE="OPERATOR">^=</SEQ>
		<SEQ TYPE="OPERATOR">&lt;-</SEQ>
		<SEQ TYPE="OPERATOR">&gt;</SEQ>
		<SEQ TYPE="OPERATOR">&gt;=</SEQ>
		<SEQ TYPE="OPERATOR">/</SEQ>
		<SEQ TYPE="OPERATOR">&lt;&lt;</SEQ>
		<SEQ TYPE="OPERATOR">/=</SEQ>
		<SEQ TYPE="OPERATOR">&lt;&lt;=</SEQ>
		<SEQ TYPE="OPERATOR">++</SEQ>		
		<SEQ TYPE="OPERATOR">=</SEQ>
		<SEQ TYPE="OPERATOR">:=</SEQ>
		<SEQ TYPE="NULL">,</SEQ>
		<SEQ TYPE="NULL">;</SEQ>
		<SEQ TYPE="OPERATOR">%</SEQ>
		<SEQ TYPE="OPERATOR">&gt;&gt;</SEQ>
		<SEQ TYPE="OPERATOR">%=</SEQ>
		<SEQ TYPE="OPERATOR">&gt;&gt;=</SEQ>
		<SEQ TYPE="OPERATOR">--</SEQ>
		<SEQ TYPE="OPERATOR">!</SEQ>
		<SEQ TYPE="OPERATOR">...</SEQ>
		<SEQ TYPE="NULL">.</SEQ>
		<SEQ TYPE="NULL">:</SEQ>
		<SEQ TYPE="OPERATOR">&amp;^</SEQ>
		<SEQ TYPE="OPERATOR">&amp;^=</SEQ>
		
		<KEYWORDS IGNORE_CASE="FALSE">
			<KEYWORD3>bool</KEYWORD3>
			<KEYWORD3>uint8</KEYWORD3>
			<KEYWORD3>uint16</KEYWORD3>
			<KEYWORD3>uint32</KEYWORD3>
			<KEYWORD3>uint64</KEYWORD3>
			<KEYWORD3>int8</KEYWORD3>
			<KEYWORD3>int16</KEYWORD3>
			<KEYWORD3>int32</KEYWORD3>
			<KEYWORD3>int64</KEYWORD3>
			<KEYWORD3>float32</KEYWORD3>
			<KEYWORD3>float64</KEYWORD3>
			<KEYWORD3>byte</KEYWORD3>
			<KEYWORD3>uint</KEYWORD3>
			<KEYWORD3>int</KEYWORD3>
			<KEYWORD3>float</KEYWORD3>
			<KEYWORD3>uintptr</KEYWORD3>
			<KEYWORD3>string</KEYWORD3>
			
			<KEYWORD1>break</KEYWORD1>
			<KEYWORD1>default</KEYWORD1>
			<KEYWORD1>func</KEYWORD1>
			<KEYWORD1>interface</KEYWORD1>
			<KEYWORD1>select</KEYWORD1>
			<KEYWORD1>case</KEYWORD1>
			<KEYWORD1>defer</KEYWORD1>
			<KEYWORD1>go</KEYWORD1>
			<KEYWORD1>map</KEYWORD1>
			<KEYWORD1>struct</KEYWORD1>
			<KEYWORD1>chan</KEYWORD1>
			<KEYWORD1>else</KEYWORD1>		
			<KEYWORD1>goto</KEYWORD1>
			<KEYWORD1>package</KEYWORD1>
			<KEYWORD1>switch</KEYWORD1>
			<KEYWORD1>const</KEYWORD1>
			<KEYWORD1>fallthrough</KEYWORD1>
			<KEYWORD1>if</KEYWORD1>
			<KEYWORD1>range</KEYWORD1>
			<KEYWORD1>type</KEYWORD1>
			<KEYWORD1>continue</KEYWORD1>
			<KEYWORD1>for</KEYWORD1>
			<KEYWORD1>import</KEYWORD1>
			<KEYWORD1>return</KEYWORD1>
			<KEYWORD1>var</KEYWORD1>
			
			<!-- Packages? -->
			<KEYWORD2>archive</KEYWORD2>
			<KEYWORD2>tar</KEYWORD2>
			<KEYWORD2>asn1</KEYWORD2>
			<KEYWORD2>big</KEYWORD2>
			<KEYWORD2>bignum</KEYWORD2>
			<KEYWORD2>bufio</KEYWORD2>
			<KEYWORD2>bytes</KEYWORD2>
			<KEYWORD2>compress</KEYWORD2>
			<KEYWORD2>flate</KEYWORD2>
			<KEYWORD2>gzip</KEYWORD2>
			<KEYWORD2>zlib</KEYWORD2>
			<KEYWORD2>containe</KEYWORD2>
			<KEYWORD2>heap</KEYWORD2>
			<KEYWORD2>list</KEYWORD2>
			<KEYWORD2>ring</KEYWORD2>
			<KEYWORD2>vector</KEYWORD2>
			<KEYWORD2>crypto</KEYWORD2>
			<KEYWORD2>aes</KEYWORD2>
			<KEYWORD2>block</KEYWORD2>
			<KEYWORD2>hmac</KEYWORD2>
			<KEYWORD2>md5</KEYWORD2>
			<KEYWORD2>rc4</KEYWORD2>
			<KEYWORD2>rsa</KEYWORD2>
			<KEYWORD2>sha1</KEYWORD2>
			<KEYWORD2>subtle</KEYWORD2>
			<KEYWORD2>tls</KEYWORD2>
			<KEYWORD2>x509</KEYWORD2>
			<KEYWORD2>debug</KEYWORD2>
			<KEYWORD2>dwarf</KEYWORD2>
			<KEYWORD2>elf</KEYWORD2>
			<KEYWORD2>gosym</KEYWORD2>
			<KEYWORD2>macho</KEYWORD2>
			<KEYWORD2>proc</KEYWORD2>
			<KEYWORD2>ebnf</KEYWORD2>
			<KEYWORD2>encoding</KEYWORD2>
			<KEYWORD2>ascii85</KEYWORD2>
			<KEYWORD2>base64</KEYWORD2>
			<KEYWORD2>binary</KEYWORD2>
			<KEYWORD2>git85</KEYWORD2>
			<KEYWORD2>hex</KEYWORD2>
			<KEYWORD2>pem</KEYWORD2>
			<KEYWORD2>exec</KEYWORD2>
			<KEYWORD2>exp</KEYWORD2>
			<KEYWORD2>4s</KEYWORD2>
			<KEYWORD2>datafmt</KEYWORD2>
			<KEYWORD2>draw</KEYWORD2>
			<KEYWORD2>eval</KEYWORD2>
			<KEYWORD2>iterable</KEYWORD2>
			<KEYWORD2>nacl</KEYWORD2>
			<KEYWORD2>av</KEYWORD2>
			<KEYWORD2>srpc</KEYWORD2>
			<KEYWORD2>ogle</KEYWORD2>
			<KEYWORD2>spacewar</KEYWORD2>
			<KEYWORD2>expvar</KEYWORD2>
			<KEYWORD2>flag</KEYWORD2>
			<KEYWORD2>fmt</KEYWORD2>
			<KEYWORD2>go</KEYWORD2>
			<KEYWORD2>ast</KEYWORD2>
			<KEYWORD2>doc</KEYWORD2>
			<KEYWORD2>parser</KEYWORD2>
			<KEYWORD2>printer</KEYWORD2>
			<KEYWORD2>scanner</KEYWORD2>
			<KEYWORD2>token</KEYWORD2>
			<KEYWORD2>gob</KEYWORD2>
			<KEYWORD2>hash</KEYWORD2>
			<KEYWORD2>adler32</KEYWORD2>
			<KEYWORD2>crc32</KEYWORD2>
			<KEYWORD2>http</KEYWORD2>
			<KEYWORD2>image</KEYWORD2>
			<KEYWORD2>png</KEYWORD2>
			<KEYWORD2>io</KEYWORD2>
			<KEYWORD2>json</KEYWORD2>
			<KEYWORD2>log</KEYWORD2>
			<KEYWORD2>malloc</KEYWORD2>
			<KEYWORD2>math</KEYWORD2>
			<KEYWORD2>net</KEYWORD2>
			<KEYWORD2>once</KEYWORD2>
			<KEYWORD2>os</KEYWORD2>
			<KEYWORD2>patch</KEYWORD2>
			<KEYWORD2>path</KEYWORD2>
			<KEYWORD2>rand</KEYWORD2>
			<KEYWORD2>reflect</KEYWORD2>
			<KEYWORD2>regexp</KEYWORD2>
			<KEYWORD2>rpc</KEYWORD2>
			<KEYWORD2>runtime</KEYWORD2>
			<KEYWORD2>sort</KEYWORD2>
			<KEYWORD2>strconv</KEYWORD2>
			<KEYWORD2>strings</KEYWORD2>
			<KEYWORD2>sync</KEYWORD2>
			<KEYWORD2>syscall</KEYWORD2>
			<KEYWORD2>tabwrite</KEYWORD2>
			<KEYWORD2>template</KEYWORD2>
			<KEYWORD2>testing</KEYWORD2>
			<KEYWORD2>iotest</KEYWORD2>
			<KEYWORD2>quick</KEYWORD2>
			<KEYWORD2>script</KEYWORD2>
			<KEYWORD2>time</KEYWORD2>
			<KEYWORD2>unicode</KEYWORD2>
			<KEYWORD2>unsafe</KEYWORD2>
			<KEYWORD2>utf8</KEYWORD2>
			<KEYWORD2>xml</KEYWORD2>
						
			
			<LITERAL2>true</LITERAL2>
			<LITERAL2>false</LITERAL2>
			<LITERAL2>nil</LITERAL2>
		</KEYWORDS>
	</RULES>
</MODE>
